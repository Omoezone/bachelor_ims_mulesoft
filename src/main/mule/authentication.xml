<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:java="http://www.mulesoft.org/schema/mule/java"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="verifyUser" doc:id="d8b5f773-b4f3-4456-8669-3c634d2f4248">
    <set-variable value="#[payload.password as String]" doc:name="Set Variable" doc:id="348946fe-b649-4b15-9995-b6061fe53334" variableName="pp"/>
    <db:query-single doc:name="Query single" doc:id="268da1c7-a465-4405-9aaa-402fd068ca6c" config-ref="Database_Config">
        <db:sql><![CDATA[SELECT * FROM users WHERE email = :EMAIL]]></db:sql>
        <db:input-parameters><![CDATA[#[{EMAIL: payload.email}]]]></db:input-parameters>
    </db:query-single>
    
    <choice doc:name="Check User Exists" doc:id="2d523827-1a14-4916-91ce-334fd5876c1b">
        <when expression="#[payload.user_id != null]">
            <ee:transform doc:name="Transform Message" doc:id="7129347b-ccaf-445f-8985-bea67854866d">
                <ee:message>
                    <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    userId: payload.user_id,
    firstName: payload.first_name,
    lastName: payload.last_name,
    email: payload.email,
    password: payload.password,
    age: payload.age,
    gender: payload.gender
}]]></ee:set-payload>
                </ee:message>
            </ee:transform>
            <java:invoke-static doc:name="ComparePasswords" doc:id="cac8f6cd-fdc0-43c8-996d-56c20175d9ca" class="security.ComparePassword" method="checkPassword(java.lang.String,java.lang.String)" target="compareResult">
                <java:args><![CDATA[#[{
                    arg0: vars.pp as String,
                    arg1: payload.password as String
                }]]]></java:args>
            </java:invoke-static>
            <choice doc:name="Choice" doc:id="8b02bdc7-4d8c-4bfd-8b1f-e46b05cd6e2e">
                <when expression="#[vars.compareResult]">
                    <logger level="INFO" doc:name="Auth Successful" doc:id="4fa1cca5-0516-4146-91c7-cce6742e75b1" message="Auth Success"/>
                </when>
                <otherwise>
                    <raise-error type="AUTHENTICATION:UNAUTHORIZED" doc:name="Raise Unauthorized Error" doc:id="5652c4d7-9f62-42f0-8895-17b3964c40cc"/>
                </otherwise>
            </choice>
        </when>
        <otherwise>
            <raise-error type="AUTHENTICATION:UNAUTHORIZED" doc:name="Raise Unauthorized Error" doc:id="213a9b33-213b-4777-8c50-63fc290788b6"/>
        </otherwise>
    </choice>
</flow>

	<flow name="createJwtToken" doc:id="0bc46f79-76e2-45c6-b619-18c44aa887ee" >
		<java:invoke-static doc:name="generate JWT TOKEN" doc:id="5ae8cc38-78d5-4e82-8f6b-3aba506aa0c1" class="security.JwtUtil" method="generateToken(java.lang.String,int)" target="jwtToken">
			<java:args ><![CDATA[#[{
	arg0: payload.user_id,
	arg1: 120
}]]]></java:args>
		</java:invoke-static>
		<logger level="INFO" doc:name="Logger" doc:id="2e8be429-251f-4043-ab70-5de2e3a2e20d" />
	</flow>
	<sub-flow name="validateJwtToken" doc:id="76c195e3-6800-4a18-a352-f7790389ba80" >
		<java:invoke-static doc:name="validate JWT Token" doc:id="30344f52-3214-4a88-a83b-9b47e50c3cb2" class="security.JwtUtil" method="validateToken(java.lang.String)">
			<java:args ><![CDATA[#[arg0: payload.token]]]></java:args>
		</java:invoke-static>
	</sub-flow>
</mule>
